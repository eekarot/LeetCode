题目描述：
输入一个整型数组，数组里有正数也有负数。数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。

要求时间复杂度为O(n)。

示例
输入: nums = [-2,1,-3,4,-1,2,1,-5,4]
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。

解题思路：
从左至右，依次相加。加上当前值，如果大于零，继续；如果小于零，则从下一个值重新开始累加。同时记录当前最大的子数组和。

代码：
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int temp = nums[0];
        int res = nums[0];
        int n = nums.size();
        for(int i = 1; i < n; ++i){
            temp = max(0, temp) + nums[i];
            res = max(res, temp);
        }
        return res;
    }
};
