题目描述：
一个机器人在m×n大小的地图的左上角，机器人每次向下或向右移动。机器人要到达地图的右下角。
可以有多少种不同的路径从起点走到终点？

解题思路：
当前点的路径数=左边点的路径数+上边点的路径数

提交代码：
class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<vector<int>> dp(m,vector<int>(n,1));
        for(int i = 0; i < m; ++i){
            dp[i][0] = 1;
        }
        for(int j = 0; j < n; ++j){
            dp[0][j] = 1;
        }
        for(int i = 1; i < m; ++i){
            for(int j = 1; j < n; ++j){
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
    }
};
