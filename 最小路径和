题目描述：
给定一个由非负整数填充的m x n的二维数组，现在要从二维数组的左上角走到右下角，请找出路径上的所有数字之和最小的路径。
注意：你每次只能向下或向右移动。

解题思路:
当前点的值为：min（左边点的值+左边点到当前点的值， 上边点的值+上边点到当前点的值）

提交代码：
class Solution {
public:
    int minPathSum(vector<vector<int> > &grid) {
        int m = grid.size();
        int n = grid[0].size();
        for(int i = 1; i < m; ++i){
            grid[i][0] += grid[i - 1][0];
        }
        for(int j = 1; j < n; ++j){
            grid[0][j] += grid[0][j-1];
        }
        for(int i = 1; i < m; ++i){
            for(int j = 1; j < n; ++j){
                grid[i][j] += min(grid[i-1][j], grid[i][j-1]);
            }
        }
        return grid[m-1][n-1];
    }
};
